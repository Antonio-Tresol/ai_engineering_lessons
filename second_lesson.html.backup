<!DOCTYPE html>
<html lang="en" class="dark" style="scroll-behavior: smooth;">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Deconstructing the Foundation Model (Chapter 2)</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #030712;
            color: #d1d5db;
        }
        .section {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 6rem 2rem;
            border-bottom: 1px solid #1f2937;
        }
        .card {
            background-color: #111827;
            border: 1px solid #374151;
            border-radius: 0.75rem;
            padding: 2rem;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            transform-style: preserve-3d;
        }
        .card:hover {
            transform: translateY(-5px) perspective(1000px) rotateX(1deg) rotateY(-1deg);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.2), 0 10px 10px -5px rgba(0, 0, 0, 0.1);
        }
        .quote {
            font-style: italic;
            color: #9ca3af;
            border-left: 3px solid #4338ca;
            padding-left: 1.5rem;
            margin-top: 2rem;
        }
        .icon {
            width: 56px;
            height: 56px;
            stroke-width: 1.5;
        }
        .animated {
            opacity: 0;
            transform: translateY(30px);
            transition: opacity 0.6s ease-out, transform 0.6s ease-out;
        }
        .animated.is-visible {
            opacity: 1;
            transform: translateY(0);
        }
        .nav-link {
            transition: color 0.3s;
        }
        .nav-link.active {
            color: #818cf8;
            font-weight: 600;
        }
        #shoggoth-container {
            position: relative;
            width: 300px;
            height: 300px;
        }
        .shoggoth-layer {
            position: absolute;
            top: 0; left: 0; width: 100%; height: 100%;
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
            transition: opacity 0.7s ease-in-out;
        }
        .bar { transition: width 0.5s ease-in-out; }
    </style>
</head>
<body class="bg-gray-900 text-gray-200">

    <!-- Sticky Navigation -->
    <nav class="sticky top-0 z-50 bg-gray-900/80 backdrop-blur-lg border-b border-gray-800">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex items-center justify-center h-16 space-x-2 md:space-x-8 text-xs sm:text-sm md:text-base">
                <a href="#intro" class="nav-link text-gray-400 hover:text-white">Intro</a>
                <a href="#data" class="nav-link text-gray-400 hover:text-white">Data</a>
                <a href="#modeling" class="nav-link text-gray-400 hover:text-white">Modeling</a>
                <a href="#post-training" class="nav-link text-gray-400 hover:text-white">Post-Training</a>
                <a href="#sampling" class="nav-link text-gray-400 hover:text-white">Sampling</a>
                <a href="#takeaways" class="nav-link text-gray-400 hover:text-white">Takeaways</a>
            </div>
        </div>
    </nav>

    <main>
        <!-- Section 0: Intro -->
        <section id="intro" class="section">
            <div class="text-center">
                <h1 class="text-4xl md:text-5xl font-bold text-white tracking-tight animated">Understanding Foundation Models</h1>
                <p class="mt-4 text-lg text-gray-400 animated" style="transition-delay: 100ms;">AI Engineering Chapter 2 by Huyen (2025)</p>
                <blockquote class="quote max-w-3xl mt-12 mx-auto animated" style="transition-delay: 200ms;">
                    <p>"While you don't need to know how to develop a model to use it, a high-level understanding will help you decide what model to use and how to adapt it to your needs."</p>
                    <footer class="text-right mt-2 text-gray-500">- Huyen (2025, p. 49)</footer>
                </blockquote>
            </div>
        </section>

        <!-- Section 1: Training Data -->
        <section id="data" class="section">
            <div class="text-center w-full max-w-6xl">
                <h2 class="text-3xl font-bold mb-12 animated">The Foundation's Foundation: Training Data</h2>
                <div class="grid md:grid-cols-2 gap-8 items-center">
                    <div class="card text-left animated" style="transition-delay: 100ms;">
                        <h3 class="text-xl font-semibold text-indigo-400">Data Defines Capability</h3>
                        <p class="mt-4 text-gray-300">A model's performance is a direct reflection of its training data. Biases, strengths, and weaknesses are all inherited from the dataset.</p>
                        <p class="mt-4 text-gray-300">For example, general web scrapes like Common Crawl are heavily skewed towards English, leading to disparities in performance, cost, and latency for other languages.</p>
                         <blockquote class="quote">
                            <p>"An AI model is only as good as the data it was trained on. If there's no Vietnamese in the training data, the model won't be able to translate from English into Vietnamese."</p>
                            <footer class="text-right mt-2 text-gray-500">- Huyen (2025, p. 50)</footer>
                        </blockquote>
                    </div>
                    <div class="card animated" style="transition-delay: 200ms;">
                        <h3 class="text-lg font-semibold text-center mb-4">Language Distribution in Common Crawl</h3>
                        <div class="space-y-3 text-left">
                            <div class="flex items-center"><span class="w-20 font-mono text-sm">English</span><div class="h-6 bg-indigo-600 rounded" style="width: 45.8%;"></div><span class="ml-2 text-sm font-mono">45.8%</span></div>
                            <div class="flex items-center"><span class="w-20 font-mono text-sm">Russian</span><div class="h-6 bg-indigo-800 rounded" style="width: 6%;"></div><span class="ml-2 text-sm font-mono">6.0%</span></div>
                            <div class="flex items-center"><span class="w-20 font-mono text-sm">German</span><div class="h-6 bg-indigo-800 rounded" style="width: 5.9%;"></div><span class="ml-2 text-sm font-mono">5.9%</span></div>
                            <div class="flex items-center"><span class="w-20 font-mono text-sm">Chinese</span><div class="h-6 bg-indigo-800 rounded" style="width: 4.9%;"></div><span class="ml-2 text-sm font-mono">4.9%</span></div>
                            <div class="flex items-center"><span class="w-20 font-mono text-sm">Punjabi</span><div class="h-6 bg-indigo-900 rounded" style="width: 0.006%;"></div><span class="ml-2 text-sm font-mono">&lt;0.01%</span></div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Section 2: Modeling -->
        <section id="modeling" class="section">
             <div class="text-center w-full max-w-6xl">
                <h2 class="text-3xl font-bold mb-12 animated">Blueprint of Intelligence: Modeling</h2>
                <div class="grid lg:grid-cols-2 gap-8">
                    <div class="card text-left animated" style="transition-delay: 100ms;">
                        <h3 class="text-xl font-semibold text-indigo-400 mb-4">Architecture: Transformer Dominance</h3>
                        <p>The Transformer architecture's key innovation, the <span class="font-semibold text-white">attention mechanism</span>, allows parallel processing of inputs, a significant advantage over sequential RNNs. However, its quadratic complexity with sequence length motivates research into alternatives like Mamba.</p>
                        <blockquote class="quote">
                            <p>"With transformers, the input tokens can be processed in parallel, significantly speeding up input processing."</p>
                            <footer class="text-right mt-2 text-gray-500">- Huyen (2025, p. 60)</footer>
                        </blockquote>
                    </div>
                    <div class="card text-left animated" style="transition-delay: 200ms;">
                        <h3 class="text-xl font-semibold text-indigo-400 mb-4">Size & Scaling Laws</h3>
                        <p>For a fixed compute budget, the Chinchilla scaling law provides an optimal ratio between model size and data size, suggesting we should train smaller models on much more data than previously thought.</p>
                        <div class="mt-4">
                            <p class="font-mono">Optimal Tokens ≈ 20 × Model Parameters</p>
                        </div>
                        <blockquote class="quote">
                            <p>"Given a fixed amount of FLOPs, what model size and dataset size would give the best performance? A model that can achieve the best performance given a fixed compute budget is compute-optional."</p>
                            <footer class="text-right mt-2 text-gray-500">- Huyen (2025, p. 72)</footer>
                        </blockquote>
                    </div>
                </div>
            </div>
        </section>

        <!-- Section 3: Post-Training -->
        <section id="post-training" class="section">
            <div class="text-center w-full max-w-6xl">
                <h2 class="text-3xl font-bold mb-12 animated">Alignment: From Raw Intelligence to Usable Product</h2>
                <div class="grid lg:grid-cols-2 gap-12 items-center">
                    <div id="shoggoth-card" class="card flex flex-col items-center justify-center animated" style="transition-delay: 100ms;">
                        <h3 class="text-xl font-semibold text-white mb-4">The Alignment Process</h3>
                        <div id="shoggoth-container">
                            <div id="shoggoth-pretrain" class="shoggoth-layer opacity-100" style="background-image: url('https://placehold.co/300x300/111827/9ca3af?text=1.+Pre-training%0A(Raw+Capability)');"></div>
                            <div id="shoggoth-sft" class="shoggoth-layer opacity-0" style="background-image: url('https://placehold.co/300x300/111827/c4b5fd?text=2.+SFT%0A(Instruction+Following)');"></div>
                            <div id="shoggoth-rlhf" class="shoggoth-layer opacity-0" style="background-image: url('https://placehold.co/300x300/111827/818cf8?text=3.+RLHF%0A(Polished+Smiley+Face)');"></div>
                        </div>
                        <div id="shoggoth-controls" class="mt-4 flex space-x-2">
                             <button class="px-3 py-1 text-sm rounded bg-gray-700 hover:bg-gray-600" data-step="pretrain">1. Pre-training</button>
                             <button class="px-3 py-1 text-sm rounded bg-gray-700 hover:bg-gray-600" data-step="sft">2. SFT</button>
                             <button class="px-3 py-1 text-sm rounded bg-gray-700 hover:bg-gray-600" data-step="rlhf">3. RLHF</button>
                        </div>
                    </div>
                    <div class="text-left animated" style="transition-delay: 200ms;">
                        <p class="mb-4 text-lg">A pre-trained model is powerful but unaligned—like a chaotic "Shoggoth." Post-training applies a "smiley face" of usability and safety.</p>
                        <ul class="space-y-4">
                            <li><strong>1. Supervised Finetuning (SFT):</strong> Teaches the model to follow instructions and be conversational using high-quality `(prompt, response)` examples.</li>
                            <li><strong>2. Preference Finetuning (RLHF/DPO):</strong> Aligns the model to be helpful, honest, and harmless by training it to maximize scores from a "reward model" that learns from human preferences.</li>
                        </ul>
                         <blockquote class="quote">
                            <p>"You can think of post-training as unlocking the capabilities that the pre-trained model already has but are hard for users to access via prompting alone."</p>
                            <footer class="text-right mt-2 text-gray-500">- Huyen (2025, pp. 78-79)</footer>
                        </blockquote>
                    </div>
                </div>
            </div>
        </section>

        <!-- Section 4: Sampling -->
        <section id="sampling" class="section">
            <div class="text-center w-full max-w-6xl">
                <h2 class="text-3xl font-bold mb-12 animated">The Output Engine: Sampling</h2>
                 <p class="max-w-3xl mx-auto mb-10 animated" style="transition-delay: 100ms;">A model generates a probability distribution over its entire vocabulary for the next token. Sampling is the process of choosing from that distribution. This is the source of both creativity and chaos.</p>
                <div class="grid lg:grid-cols-2 gap-8">
                     <div class="card text-left animated" style="transition-delay: 200ms;">
                        <h3 class="text-xl font-semibold text-indigo-400 mb-4">Controlling Randomness with Temperature</h3>
                        <p class="mb-4">Temperature adjusts the probability distribution. Low temperature makes the model deterministic; high temperature makes it creative.</p>
                        <label for="temp-slider" class="block mb-2 text-sm font-medium">Temperature: <span id="temp-value">1.0</span></label>
                        <input id="temp-slider" type="range" min="0.1" max="2.0" value="1.0" step="0.1" class="w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer">
                        <div id="temp-viz" class="mt-4 space-y-2"></div>
                         <blockquote class="quote">
                            <p>"A higher temperature reduces the probabilities of common tokens...enables models to create more creative responses."</p>
                            <footer class="text-right mt-2 text-gray-500">- Huyen (2025, p. 91)</footer>
                        </blockquote>
                    </div>
                    <div class="card text-left animated" style="transition-delay: 300ms;">
                        <h3 class="text-xl font-semibold text-indigo-400 mb-4">Engineering Better Outputs</h3>
                         <ul class="space-y-4">
                            <li><strong>Test-Time Compute:</strong> Generate multiple responses and use a verifier or logprobs to select the best one. This is a direct compute-for-quality tradeoff.</li>
                            <li><strong>Structured Outputs:</strong> Use constrained sampling to force model outputs into a required format (e.g., JSON), which is critical for reliable agentic workflows.</li>
                            <li><strong>The Probabilistic Nature:</strong> This inherent randomness causes <span class="font-semibold text-white">inconsistency</span> and <span class="font-semibold text-white">hallucinations</span>—the central challenges AI engineers must mitigate.</li>
                        </ul>
                         <blockquote class="quote">
                            <p>"If inconsistency arises from randomness in the sampling process, the cause of hallucination is more nuanced...a model can output something that is believed to have never been seen before in the training data."</p>
                            <footer class="text-right mt-2 text-gray-500">- Huyen (2025, p. 107)</footer>
                        </blockquote>
                    </div>
                </div>
            </div>
        </section>

        <!-- Section 5: Key Takeaways -->
        <section id="takeaways" class="section">
            <div class="text-center">
                <h2 class="text-3xl font-bold mb-12 animated">Key Engineering Takeaways</h2>
                <div class="max-w-4xl w-full grid md:grid-cols-2 gap-6">
                    <div class="card animated" style="transition-delay: 100ms;"><p class="text-lg text-center"><strong>1. Data Dictates Destiny:</strong> A model's capabilities and biases are a direct function of its training data. Analyze the data recipe before choosing a model.</p></div>
                    <div class="card animated" style="transition-delay: 200ms;"><p class="text-lg text-center"><strong>2. Obey the Scaling Laws:</strong> Use the Chinchilla rule (Tokens ≈ 20 × Params) as a guiding principle for allocating compute resources effectively.</p></div>
                    <div class="card animated" style="transition-delay: 300ms;"><p class="text-lg text-center"><strong>3. Alignment Creates Usability:</strong> Pre-training creates raw power. Post-training (SFT & RLHF) creates a product people can safely and effectively use.</p></div>
                    <div class="card animated" style="transition-delay: 400ms;"><p class="text-lg text-center"><strong>4. Master the Sampling Dial:</strong> Your control over Temperature, Top-p, and other sampling strategies is your primary tool for tuning model behavior at inference time.</p></div>
                </div>
            </div>
        </section>

    </main>

    <!-- Footer -->
    <footer class="bg-gray-900 py-12 text-center border-t border-gray-800">
        <h3 class="text-xl font-semibold mb-6">References</h3>
        <div class="text-gray-400 max-w-4xl mx-auto space-y-4">
            <p>
                Huyen, C. (2025). <em>AI engineering: Building applications with foundation models</em>. O'Reilly Media.
            </p>
            
            <div class="mt-8">
                <h4 class="text-lg font-semibold text-gray-300 mb-4">Additional Reference Materials to Review:</h4>
                <div class="space-y-3">
                    <p>
                        <a href="https://jalammar.github.io/illustrated-transformer/" 
                           class="text-indigo-400 hover:text-indigo-300 underline" 
                           target="_blank" 
                           rel="noopener noreferrer">
                            The Illustrated Transformer
                        </a>
                        <span class="text-gray-500"> - Jay Alammar's visual guide to understanding transformer architecture</span>
                    </p>
                    <p>
                        <a href="https://youtu.be/BprirYymXrg?si=J60x-MRgsVt-y8aQ" 
                           class="text-indigo-400 hover:text-indigo-300 underline" 
                           target="_blank" 
                           rel="noopener noreferrer">
                            LLM Lecture: A Deep Dive into Transformers, Prompts, and Human Feedback
                        </a>
                        <span class="text-gray-500"> - Comprehensive video lecture on LLM fundamentals</span>
                    </p>
                </div>
            </div>
        </div>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // --- ANIMATIONS & NAV ---
            const animatedEls = document.querySelectorAll('.animated');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) entry.target.classList.add('is-visible');
                });
            }, { threshold: 0.1 });
            animatedEls.forEach(el => observer.observe(el));

            const sections = document.querySelectorAll('section');
            const navLinks = document.querySelectorAll('.nav-link');
            const navObserver = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        navLinks.forEach(link => {
                            link.classList.toggle('active', link.getAttribute('href').substring(1) === entry.target.id);
                        });
                    }
                });
            }, { rootMargin: '-50% 0px -50% 0px' });
            sections.forEach(sec => navObserver.observe(sec));

            // --- SHOGGOTH INTERACTIVE ---
            const shoggothControls = document.getElementById('shoggoth-controls');
            const layers = {
                pretrain: document.getElementById('shoggoth-pretrain'),
                sft: document.getElementById('shoggoth-sft'),
                rlhf: document.getElementById('shoggoth-rlhf')
            };
            shoggothControls.addEventListener('click', (e) => {
                if (e.target.tagName === 'BUTTON') {
                    const step = e.target.dataset.step;
                    Object.values(layers).forEach(l => l.style.opacity = '0');
                    if (step === 'pretrain') {
                        layers.pretrain.style.opacity = '1';
                    } else if (step === 'sft') {
                        layers.pretrain.style.opacity = '1';
                        layers.sft.style.opacity = '1';
                    } else if (step === 'rlhf') {
                        layers.pretrain.style.opacity = '1';
                        layers.sft.style.opacity = '1';
                        layers.rlhf.style.opacity = '1';
                    }
                }
            });

            // --- TEMPERATURE SAMPLING VIZ ---
            const tempSlider = document.getElementById('temp-slider');
            const tempValue = document.getElementById('temp-value');
            const tempViz = document.getElementById('temp-viz');
            const initialLogits = [
                { token: 'deterministic', logit: 4.0 },
                { token: 'focused', logit: 3.5 },
                { token: 'creative', logit: 2.0 },
                { token: 'surprising', logit: 1.5 },
                { token: 'random', logit: 0.5 }
            ];

            const softmax = (logits, temp) => {
                const adjustedLogits = logits.map(l => l / temp);
                const maxLogit = Math.max(...adjustedLogits);
                const exps = adjustedLogits.map(l => Math.exp(l - maxLogit));
                const sumExps = exps.reduce((a, b) => a + b, 0);
                return exps.map(e => e / sumExps);
            };

            const updateTempViz = () => {
                const temp = parseFloat(tempSlider.value);
                tempValue.textContent = temp.toFixed(1);
                const probs = softmax(initialLogits.map(l => l.logit), temp);
                
                tempViz.innerHTML = initialLogits.map((item, i) => {
                    const probPercent = (probs[i] * 100).toFixed(1);
                    return `
                        <div class="flex items-center">
                            <span class="w-32 font-mono text-sm text-gray-400">${item.token}</span>
                            <div class="flex-grow h-5 bg-gray-700 rounded overflow-hidden">
                                <div class="h-full bg-indigo-500 rounded bar" style="width: ${probPercent}%;"></div>
                            </div>
                            <span class="ml-3 w-12 text-sm font-mono">${probPercent}%</span>
                        </div>
                    `;
                }).join('');
            };

            tempSlider.addEventListener('input', updateTempViz);
            updateTempViz();
        });
    </script>
</body>
</html>
